import os
import string

# FLAG = open('flag.txt', 'rb').read().strip()


def ECC_encode(x):
    y2 = (x**3 + a*x + b) % p
    return y2

p = 0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff
a = 0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc
b = 0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b

charset = string.printable



# C = [ hex(ECC_encode(int(os.urandom(8).hex() + hex(k)[2:], 16))) for k in FLAG ]

C_out = ['0x5ac635d8aa5f6f9bb097ad9f62b8d84659805542d1f6c228345c3ad955be1d8d', '0x5ac635d8aa9cc535b02dbf89849439a6b5e23b85415bf9e4f4e0f57c5a2720dd', '0x5ac635d8aa46b3cf95b9121319d9d6aba99639fba85f87c65c8f8b8b67671eb9', '0x5ac635d8aa8c98b1eb87c86b05be9c206afe823192fcb2ab03706fd4eabacf39', '0x5ac635d8aa58d148e8c585c34a7c6efebadff59a3914cb0536d7350f4c8419b9', '0x5ac635d8aa541a1aa1e6ee67a8cb3882fc5f599135248a8e5907f4a7e1a4f8ad', '0x5ac635d8aa3a98ede43b05d4e7a99f7461c0e7dfda473de6e15805e809678c49', '0x5ac635d8aa3a9802028f5d2655456d58f3cbd96c67c46a648c61b13958964909', '0x5ac635d8aa3b57aafece5fa964f187d936eedc71dd63d07e066ee521982ee3dd', '0x5ac635d8aabd972b49eb28b932da8253c6f7893f3ade8e521d97ed4185a488dd', '0x5ac635d8aa69c3b04c5db2d1d9a0e4ac9b0d061f818998a611239c537b233739', '0x5ac635d8aadef5d32df4b12abb59a6bc82fcd14b4eb7294817e7d2d48e3fbbad', '0x5ac635d8aa77be3a709a73ecbac43c0eb78ca4b5e0286d5a40fedfcbd25c0bdd', '0x5ac635d8aa3a9e62b56d7fda4350726f13f8e70e2bc5d8b353b9c713847f4a2f', '0x5ac635d8aa3a990c9f7ca5e35aa7a917280119c7ccf407d0774cb64dc50c6909', '0x5ac635d8aa70aabe3e2cad88d71c0f2187133c5b07f064ee4d011bd7dac6fd2f', '0x5ac635d8aa3fb6f38685d2170e0fb7bed07977b90f5116740374c59ae5e09f39', '0x5ac635d8aaa22f1e66a3478fbc87b9737a094c20579301c70400e462d50c3d2f', '0x5ac635d8aa3afaab80a173514b098c042322516c8a42282405ba05718857c909', '0x5ac635d8ab02311a4e9b65944a833f9702df1e5736a9fcc1dfed0d040cb0fd4d', '0x5ac635d8aa3b167a5c3efa0ed9bd7673a76f2edf8593f8ec2ca7b2cbf7a61c39', '0x5ac635d8aab5399bc47a79048e79c966fbf6e269cce069854aeff10b0f2a344d', '0x5ac635d8aa3a93e8fd68581c54a09b4ef1c4659b61c2cd9f9ce62e907128be5d', '0x5ac635d8aa93b3c4b8c36d3ea6331161943d46470b1801360c16ce53ea718909', '0x5ac635d8aa8f4bbb10b6ad6d17ce693726893efcc701bb07f41201f4724f58fb', '0x5ac635d8aa5c555a3ab4bfe9ee43ab8396b02f4075276c86f43e2728be345713', '0x5ac635d8aa4a4fb6ffe7f7fc1bc9c8d9bfe5baec43bc8dbf4a65b2bcc7534fb9', '0x5ac635d8aa50bbb5bd08c91fbf143e3dc10d6d3aa2960f366a14d180dbb7ce3d', '0x5ac635d8aa3a9d89af12ee98e8075e46bda420bdd7a8a7ea20572805ab8fb44d', '0x5ac635d8aa3c13591d879d8ea2f53d936e34002895b8be7749b9b8aa79e0db8d', '0x5ac635d8aa5f5862f7a08f013d2b9960f3c0bcee0c0ade79da747e4e63a9c909', '0x5ac635d8aa80ad3601141dca0f8a756dd8b92159f0df871021df8a200cae202f', '0x5ac635d8aa3cba11641cbc24cb5b41ae64e2cc72a814f061564cc618d3136b13', '0x5ac635d8aa701e24d9af13298a4af873f472252e30deeff8ea9ba4c2db8b344d', '0x5ac635d8aa779def93e925bd887df92ff29d81850bc1420270779cbddea11ab9', '0x5ac635d8aa47d1c381865b278b1b23fd7c85df2fc4ac1e937bf74f7eb19e08c7', '0x5ac635d8aa99581e301b9ded61e1c83c96a03105ffa73bb403334add7b33c6c7', '0x5ac635d8aafdf5ffc5a15114519346a9ab71b0ebfd9f2d1fa4d13e3f1ca17909', '0x5ac635d8aa59e496fa6351143c9b841e2bee6c0f073bb69daab926f2312b47fb', '0x5ac635d8aa52cf2014f369aff15267b805fda3a20cf29260d618addfe645c62f', '0x5ac635d8aa3a94ab66ffd17f860f1de614071f93db8c442961e539dc9a604909', '0x5ac635d8aa86990a0e7d8e7375b70edadd6384313e08f638693244f9cceeed5d', '0x5ac635d8ab21cda9bb6fdd17df19d69a93830dadc65f42804eeff1c1fb0cf44d', '0x5ac635d8aa45f8cfece2c4e457da8e4040b07dacfef3e559a69975b69888ae5d', '0x5ac635d8ab02a0e3659beabe9e0f977798a4a7bd4f51afd78587c8a6fbbc4739', '0x5ac635d8aaaa4ff1398f815a3fe75bfd14011474b36d6645865dd7fb3b186f3d', '0x5ac635d8aa613166a1a46f86aa078cd91b833434734d06371ab1375510192301', '0x5ac635d8aa6a28d818f7e52019ab62dd4284f41723b94f65d5c1711adb254fb9', '0x5ac635d8aa9ab449e54c65085844324dc60fd29afd0ef43e33577fb88a2003dd', '0x5ac635d8aad664a64caf85f2087940db4b0a9fa97e29b0ddd125eeaac901304d', '0x5ac635d8ab24d704a09ebb7085560399d268b449985a2394fec9fc98605acc39']
print(f"Len C_out = {len(C_out)}")

for each_c in C_out:
    for each_char in list(charset):
        while True:
            rand_b = os.urandom(8).hex()
            str_b = bytes(each_char, "utf-8").hex()[2:]

            if ECC_encode(rand_b + str_b) == each_c:
                print(each_char)
                break




# open('flag.enc', 'w').write(str(C))
