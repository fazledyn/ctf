	.text
	.file	"warmup.c"
	.globl	main                            # -- Begin function main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	movl	$0, -116(%rbp)
	movabsq	$.L.str, %rdi
	movb	$0, %al
	callq	printf@PLT
	leaq	-112(%rbp), %rsi
	movabsq	$.L.str.1, %rdi
	movb	$0, %al
	callq	scanf@PLT
	leaq	-112(%rbp), %rdi
	callq	strlen@PLT
	cmpq	$39, %rax
	je	.LBB0_2
# %bb.1:
	xorl	%edi, %edi
	callq	exit@PLT
.LBB0_2:
	movsbl	-84(%rbp), %eax
	cmpl	$55, %eax
	jne	.LBB0_42
# %bb.3:
	movsbl	-82(%rbp), %eax
	cmpl	$110, %eax
	jne	.LBB0_42
# %bb.4:
	movsbl	-83(%rbp), %eax
	cmpl	$49, %eax
	jne	.LBB0_42
# %bb.5:
	movsbl	-76(%rbp), %eax
	cmpl	$53, %eax
	jne	.LBB0_42
# %bb.6:
	movsbl	-99(%rbp), %eax
	cmpl	$121, %eax
	jne	.LBB0_42
# %bb.7:
	movsbl	-94(%rbp), %eax
	cmpl	$95, %eax
	jne	.LBB0_42
# %bb.8:
	movsbl	-110(%rbp), %eax
	cmpl	$77, %eax
	jne	.LBB0_42
# %bb.9:
	movsbl	-97(%rbp), %eax
	cmpl	$51, %eax
	jne	.LBB0_42
# %bb.10:
	movsbl	-78(%rbp), %eax
	cmpl	$48, %eax
	jne	.LBB0_42
# %bb.11:
	movsbl	-105(%rbp), %eax
	cmpl	$48, %eax
	jne	.LBB0_42
# %bb.12:
	movsbl	-88(%rbp), %eax
	cmpl	$102, %eax
	jne	.LBB0_42
# %bb.13:
	movsbl	-95(%rbp), %eax
	cmpl	$102, %eax
	jne	.LBB0_42
# %bb.14:
	movsbl	-86(%rbp), %eax
	cmpl	$48, %eax
	jne	.LBB0_42
# %bb.15:
	movsbl	-87(%rbp), %eax
	cmpl	$49, %eax
	jne	.LBB0_42
# %bb.16:
	movsbl	-102(%rbp), %eax
	cmpl	$100, %eax
	jne	.LBB0_42
# %bb.17:
	movsbl	-85(%rbp), %eax
	cmpl	$52, %eax
	jne	.LBB0_42
# %bb.18:
	movsbl	-109(%rbp), %eax
	cmpl	$123, %eax
	jne	.LBB0_42
# %bb.19:
	movsbl	-89(%rbp), %eax
	cmpl	$95, %eax
	jne	.LBB0_42
# %bb.20:
	movsbl	-93(%rbp), %eax
	cmpl	$49, %eax
	jne	.LBB0_42
# %bb.21:
	movsbl	-91(%rbp), %eax
	cmpl	$95, %eax
	jne	.LBB0_42
# %bb.22:
	movsbl	-81(%rbp), %eax
	cmpl	$57, %eax
	jne	.LBB0_42
# %bb.23:
	movsbl	-104(%rbp), %eax
	cmpl	$117, %eax
	jne	.LBB0_42
# %bb.24:
	movsbl	-75(%rbp), %eax
	cmpl	$51, %eax
	jne	.LBB0_42
# %bb.25:
	movsbl	-101(%rbp), %eax
	cmpl	$95, %eax
	jne	.LBB0_42
# %bb.26:
	movsbl	-79(%rbp), %eax
	cmpl	$104, %eax
	jne	.LBB0_42
# %bb.27:
	movsbl	-111(%rbp), %eax
	cmpl	$83, %eax
	jne	.LBB0_42
# %bb.28:
	movsbl	-112(%rbp), %eax
	cmpl	$66, %eax
	jne	.LBB0_42
# %bb.29:
	movsbl	-90(%rbp), %eax
	cmpl	$52, %eax
	jne	.LBB0_42
# %bb.30:
	movsbl	-80(%rbp), %eax
	cmpl	$95, %eax
	jne	.LBB0_42
# %bb.31:
	movsbl	-96(%rbp), %eax
	cmpl	$49, %eax
	jne	.LBB0_42
# %bb.32:
	movsbl	-100(%rbp), %eax
	cmpl	$109, %eax
	jne	.LBB0_42
# %bb.33:
	movsbl	-74(%rbp), %eax
	cmpl	$125, %eax
	jne	.LBB0_42
# %bb.34:
	movsbl	-77(%rbp), %eax
	cmpl	$117, %eax
	jne	.LBB0_42
# %bb.35:
	movsbl	-106(%rbp), %eax
	cmpl	$102, %eax
	jne	.LBB0_42
# %bb.36:
	movsbl	-103(%rbp), %eax
	cmpl	$110, %eax
	jne	.LBB0_42
# %bb.37:
	movsbl	-98(%rbp), %eax
	cmpl	$53, %eax
	jne	.LBB0_42
# %bb.38:
	movsbl	-108(%rbp), %eax
	cmpl	$49, %eax
	jne	.LBB0_42
# %bb.39:
	movsbl	-107(%rbp), %eax
	cmpl	$95, %eax
	jne	.LBB0_42
# %bb.40:
	movsbl	-92(%rbp), %eax
	cmpl	$110, %eax
	jne	.LBB0_42
# %bb.41:
	movabsq	$.L.str.2, %rdi
	movb	$0, %al
	callq	printf@PLT
	jmp	.LBB0_43
.LBB0_42:
	movabsq	$.L.str.3, %rdi
	movb	$0, %al
	callq	printf@PLT
.LBB0_43:
	xorl	%eax, %eax
	addq	$128, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
	.cfi_endproc
                                        # -- End function
	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"Enter a string: "
	.size	.L.str, 17

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"%s"
	.size	.L.str.1, 3

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	"The flag is correct!\n"
	.size	.L.str.2, 22

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	"The flag is incorrect.\n"
	.size	.L.str.3, 24

	.ident	"Ubuntu clang version 14.0.0-1ubuntu1"
	.section	".note.GNU-stack","",@progbits
